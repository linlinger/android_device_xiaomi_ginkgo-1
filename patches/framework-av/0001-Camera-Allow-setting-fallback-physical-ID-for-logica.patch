From 01368439bae3fbff2f081255f2bf17c8374dbe93 Mon Sep 17 00:00:00 2001
From: Adithya R <gh0strider.2k18.reborn@gmail.com>
Date: Tue, 26 Sep 2023 20:26:12 +0530
Subject: [PATCH 1/3] Camera: Allow setting fallback physical ID for logical
 camera [1/2]

On Redmi Note 8 (ginkgo):

 * miui camera uses logical id 61 as depth sensor on portrait mode
   but oss libcam maps it to physical id 2 which is wrong, our physical
   id of depth sensor is 20 so we must hack it this way

Set appropriate system property, for example:
persist.sys.camera.fallback_id_2=20

Change-Id: I58b88adc86dd0036fcbed34a7f20093f90e405dc
Signed-off-by: tejas101k <tejassingh649@rediffmail.com>
Signed-off-by: Edwiin Kusuma Jaya <kutemeikito0905@gmail.com>
---
 .../device3/hidl/HidlCamera3Device.cpp        | 24 +++++++++++++++----
 1 file changed, 20 insertions(+), 4 deletions(-)

diff --git a/services/camera/libcameraservice/device3/hidl/HidlCamera3Device.cpp b/services/camera/libcameraservice/device3/hidl/HidlCamera3Device.cpp
index f2e618fba4..b47d5bbe52 100644
--- a/services/camera/libcameraservice/device3/hidl/HidlCamera3Device.cpp
+++ b/services/camera/libcameraservice/device3/hidl/HidlCamera3Device.cpp
@@ -29,6 +29,9 @@
 #define CLOGE(fmt, ...) ALOGE("Camera %s: %s: " fmt, mId.c_str(), __FUNCTION__, \
             ##__VA_ARGS__)
 
+#define CLOGW(fmt, ...) ALOGW("Camera %s: %s: " fmt, mId.c_str(), __FUNCTION__, \
+ ##__VA_ARGS__)
+
 // Convenience macros for transitioning to the error state
 #define SET_ERR(fmt, ...) setErrorState(   \
     "%s: " fmt, __FUNCTION__,              \
@@ -48,6 +51,7 @@
 #include <cutils/properties.h>
 #include <camera/StringUtils.h>
 #include <com_android_internal_camera_flags.h>
+#include <android-base/properties.h>
 
 #include <android/hardware/camera/device/3.7/ICameraInjectionSession.h>
 #include <android/hardware/camera2/ICameraDeviceUser.h>
@@ -183,10 +187,22 @@ status_t HidlCamera3Device::initialize(sp<CameraProviderManager> manager,
                     physicalId, /*overrideForPerfClass*/false, &mPhysicalDeviceInfoMap[physicalId],
                     /*overrideToPortrait*/false);
             if (res != OK) {
-                SET_ERR_L("Could not retrieve camera %s characteristics: %s (%d)",
-                        physicalId.c_str(), strerror(-res), res);
-                session->close();
-                return res;
+                auto fallbackId = base::GetProperty(
+                        "persist.sys.camera.fallback_id_" + physicalId, "");
+                if (!fallbackId.empty()) {
+                    CLOGW("Could not retrieve camera %s characteristics: %s (%d)",
+                            physicalId.c_str(), strerror(-res), res);
+                    CLOGW("Trying fallback camera %s", fallbackId.c_str());
+                    res = manager->getCameraCharacteristics(
+                            fallbackId, /*overrideForPerfClass*/false,
+                            &mPhysicalDeviceInfoMap[fallbackId], /*overrideToPortrait*/true);
+                }
+                if (res != OK) {
+                    SET_ERR_L("Could not retrieve camera %s characteristics: %s (%d)",
+                            physicalId.c_str(), strerror(-res), res);
+                    session->close();
+                    return res;
+                }
             }
 
             bool usePrecorrectArray =
-- 
2.46.0

